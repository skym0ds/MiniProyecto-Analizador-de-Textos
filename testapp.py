import nltk
from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score
from analizadortext import analizar_texto  # Importa tu funci√≥n

# ==========================
# DATOS DE PRUEBA
# ==========================
casos_prueba = [
    {
        "texto": "La Universidad Nacional Aut√≥noma de M√©xico es muy reconocida.",
        "palabras": ["universidad", "nacional", "aut√≥noma", "m√©xico"],
        "entidades": ["M√©xico"],
        "sinonimos": {
            "universidad": ["facultad", "instituto"],
            "m√©xico": ["estados unidos mexicanos"]
        }
    },
    {
        "texto": "Albert Einstein desarroll√≥ la teor√≠a de la relatividad.",
        "palabras": ["einstein", "teor√≠a", "relatividad"],
        "entidades": ["Albert Einstein"],
        "sinonimos": {
            "teor√≠a": ["hip√≥tesis", "principio"],
            "relatividad": ["dependencia", "referencia"]
        }
    },
    {
        "texto": "El perro corre r√°pido en el parque.",
        "palabras": ["perro", "corre", "r√°pido", "parque"],
        "entidades": [],
        "sinonimos": {
            "perro": ["can", "chucho"],
            "r√°pido": ["veloz", "ligero"]
        }
    },
    {
        "texto": "Gabriel Garc√≠a M√°rquez escribi√≥ Cien a√±os de soledad en Colombia.",
        "palabras": ["gabriel", "garc√≠a", "m√°rquez", "soledad", "colombia"],
        "entidades": ["Gabriel Garc√≠a M√°rquez", "Colombia"],
        "sinonimos": {
            "soledad": ["aislamiento", "abandono"],
            "colombia": ["rep√∫blica de colombia"]
        }
    },
    {
        "texto": "La Organizaci√≥n de las Naciones Unidas fue fundada en 1945.",
        "palabras": ["organizaci√≥n", "naciones", "unidas", "fundada", "1945"],
        "entidades": ["Naciones Unidas"],
        "sinonimos": {
            "organizaci√≥n": ["instituci√≥n", "asociaci√≥n"],
            "unidas": ["agrupadas", "aliadas"]
        }
    },
    {
        "texto": "Python es un lenguaje de programaci√≥n muy popular en inteligencia artificial.",
        "palabras": ["python", "lenguaje", "programaci√≥n", "inteligencia", "artificial"],
        "entidades": ["Python"],
        "sinonimos": {
            "lenguaje": ["idioma", "sistema"],
            "programaci√≥n": ["codificaci√≥n", "desarrollo"]
        }
    }
]

# ==========================
# EJECUCI√ìN Y M√âTRICAS
# ==========================
y_true, y_pred = [], []

for caso in casos_prueba:
    resultado = analizar_texto(caso["texto"]).lower()
    
    # Evaluaci√≥n de palabras clave
    for palabra in caso["palabras"]:
        y_true.append(1)
        y_pred.append(1 if palabra in resultado else 0)

    # Evaluaci√≥n de entidades
    for entidad in caso["entidades"]:
        y_true.append(1)
        y_pred.append(1 if entidad.lower() in resultado else 0)

    # Evaluaci√≥n de falsos positivos (si no hay entidades esperadas)
    if not caso["entidades"]:
        y_true.append(0)
        y_pred.append(1 if "entidad" in resultado else 0)

    # Evaluaci√≥n de sin√≥nimos
    for palabra, sinonimos in caso["sinonimos"].items():
        for sinonimo in sinonimos:
            y_true.append(1)
            y_pred.append(1 if sinonimo in resultado else 0)

# ==========================
# C√ÅLCULO DE M√âTRICAS
# ==========================
accuracy = accuracy_score(y_true, y_pred)
precision = precision_score(y_true, y_pred, zero_division=0)
recall = recall_score(y_true, y_pred, zero_division=0)
f1 = f1_score(y_true, y_pred, zero_division=0)

print("üìä RESULTADOS DE EVALUACI√ìN üìä")
print(f"‚úÖ Exactitud (Accuracy): {accuracy:.2f}")
print(f"üéØ Precisi√≥n: {precision:.2f}")
print(f"üìà Recall: {recall:.2f}")
print(f"‚öñÔ∏è F1-Score: {f1:.2f}")
print(f"üîç Total evaluaciones individuales: {len(y_true)}")

